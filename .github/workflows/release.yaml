name: release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "tag: git tag you want create. (sample v1.0.0)"
        required: true
      dry-run:
        description: "dry-run: true will never create release/nuget."
        required: true
        default: false
        type: boolean

env:
  OWNER: guitarrapc
  IMAGE_NAME: docker-awscli-kubectl
  DOCKER_BUILDKIT: 1

jobs:
  docker:
    strategy:
      matrix:
        project: ["BackendServer", "FrontEnd"]
        include:
          - project: "BackendServer"
            docker-image: guitarrapc/agonessample-BackendServer
          - project: "FrontEnd"
            docker-image: guitarrapc/agonessample-FrontEnd
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Is tag valid?
        run: if [[ "${{ inputs.tag }}" != "v"* ]]; then exit 1; fi
      - uses: actions/checkout@v4
      # docker build and push
      - name: Docker Build
        run: |
          docker build --build-arg VCS_REF=$(git rev-parse --short HEAD) -t ${{ matrix.docker-image }}:latest -f src/${{ matrix.project }}/Dockerfile .
          docker tag ${{ matrix.docker-image }}:latest ${{ matrix.docker-image }}:${{ inputs.tag }}
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
        env:
          DOCKER_USER: ${{ secrets.SYNCED_DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.SYNCED_DOCKER_PASS }}
      - run: docker push ${{ matrix.docker-image }}:latest
        if: ${{ !inputs.dry-run }}
      - run: docker push ${{ matrix.docker-image }}:${{ inputs.tag }}
        if: ${{ !inputs.dry-run }}

  git:
    needs: [docker]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      # tag
      - run: git tag ${{ inputs.tag }}
        if: ${{ !inputs.dry-run }}
      - name: Push changes
        if: ${{ !inputs.dry-run }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.SYNCED_GITHUB_TOKEN_REPO }}
          branch: ${{ github.ref }}
          tags: true
      # release
      - name: Create Release
        run: gh release create ${{ inputs.tag }} --draft --verify-tag --title "Ver.${{ inputs.tag }}" --generate-notes
        if: ${{ !inputs.dry-run }}
